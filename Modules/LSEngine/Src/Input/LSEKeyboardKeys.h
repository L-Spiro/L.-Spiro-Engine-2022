/**
 * Copyright L. Spiro 2014
 * All rights reserved.
 *
 * Written by:	Shawn (L. Spiro) Wilcoxen
 *
 * This code may not be sold or traded for any personal gain without express written consent.  You may use
 *	this code in your own projects and modify it to suit your needs as long as this disclaimer remains intact.
 *	You may not take credit for having written this code.
 *
 *
 * Description: Keyboard key codes.
 */


#ifndef __LSE_KEYBOARDKEYS_H__
#define __LSE_KEYBOARDKEYS_H__

#include "../LSEEngine.h"

namespace lse {

	/**
	 * Keyboard key codes.
	 */
#ifdef LSE_WINDOWS
	enum LSE_KEYCODES {
		LSE_KC_INVALID			= ~0,
		LSE_KC_BACK				= VK_BACK,
		LSE_KC_TAB				= VK_TAB,
		LSE_KC_CLEAR			= VK_CLEAR,
		LSE_KC_ENTER			= VK_RETURN,
		LSE_KC_SHIFT			= VK_SHIFT,
		LSE_KC_CONTROL			= VK_CONTROL,
		LSE_KC_ALT				= VK_MENU,
		LSE_KC_PAUSE			= VK_PAUSE,
		LSE_KC_CAPSLOCK			= VK_CAPITAL,
		LSE_KC_KANA				= VK_KANA,
		LSE_KC_JUNJA			= VK_JUNJA,
		LSE_KC_FINAL			= VK_FINAL,
		LSE_KC_KANJI			= VK_KANJI,
		LSE_KC_ESCAPE			= VK_ESCAPE,
		LSE_KC_KANJICONVERT		= VK_CONVERT,
		LSE_KC_KANJINONCONVERT	= VK_NONCONVERT,
		LSE_KC_KANJIACCEPT		= VK_ACCEPT,
		LSE_KC_KANJIMODECHANGE	= VK_MODECHANGE,
		LSE_KC_SPACE			= VK_SPACE,
		LSE_KC_PAGEUP			= VK_PRIOR,
		LSE_KC_PAGEDOWN			= VK_NEXT,
		LSE_KC_END				= VK_END,
		LSE_KC_HOME				= VK_HOME,
		LSE_KC_LEFT				= VK_LEFT,
		LSE_KC_UP				= VK_UP,
		LSE_KC_RIGHT			= VK_RIGHT,
		LSE_KC_DOWN				= VK_DOWN,
		LSE_KC_SELECT			= VK_SELECT,
		LSE_KC_EXECUTE			= VK_EXECUTE,
		LSE_KC_PRINTSCREEN		= VK_SNAPSHOT,
		LSE_KC_INSERT			= VK_INSERT,
		LSE_KC_DELETE			= VK_DELETE,
		LSE_KC_HELP				= VK_HELP,
		LSE_KC_A				= 'A',
		LSE_KC_B				= 'B',
		LSE_KC_C				= 'C',
		LSE_KC_D				= 'D',
		LSE_KC_E				= 'E',
		LSE_KC_F				= 'F',
		LSE_KC_G				= 'G',
		LSE_KC_H				= 'H',
		LSE_KC_I				= 'I',
		LSE_KC_J				= 'J',
		LSE_KC_K				= 'K',
		LSE_KC_L				= 'L',
		LSE_KC_M				= 'M',
		LSE_KC_N				= 'N',
		LSE_KC_O				= 'O',
		LSE_KC_P				= 'P',
		LSE_KC_Q				= 'Q',
		LSE_KC_R				= 'R',
		LSE_KC_S				= 'S',
		LSE_KC_T				= 'T',
		LSE_KC_U				= 'U',
		LSE_KC_V				= 'V',
		LSE_KC_W				= 'W',
		LSE_KC_X				= 'X',
		LSE_KC_Y				= 'Y',
		LSE_KC_Z				= 'Z',
		LSE_KC_0				= '0',
		LSE_KC_1				= '1',
		LSE_KC_2				= '2',
		LSE_KC_3				= '3',
		LSE_KC_4				= '4',
		LSE_KC_5				= '5',
		LSE_KC_6				= '6',
		LSE_KC_7				= '7',
		LSE_KC_8				= '8',
		LSE_KC_9				= '9',
		LSE_KC_NUMPAD0			= VK_NUMPAD0,
		LSE_KC_NUMPAD1			= VK_NUMPAD1,
		LSE_KC_NUMPAD2			= VK_NUMPAD2,
		LSE_KC_NUMPAD3			= VK_NUMPAD3,
		LSE_KC_NUMPAD4			= VK_NUMPAD4,
		LSE_KC_NUMPAD5			= VK_NUMPAD5,
		LSE_KC_NUMPAD6			= VK_NUMPAD6,
		LSE_KC_NUMPAD7			= VK_NUMPAD7,
		LSE_KC_NUMPAD8			= VK_NUMPAD8,
		LSE_KC_NUMPAD9			= VK_NUMPAD9,
		LSE_KC_NUMPADMULTIPLY	= VK_MULTIPLY,
		LSE_KC_NUMPADDIVIDE		= VK_DIVIDE,
		LSE_KC_NUMPADADD		= VK_ADD,
		LSE_KC_NUMPADSUBTRACT	= VK_SUBTRACT,
		LSE_KC_NUMPADDECIMAL	= VK_DECIMAL,
		LSE_KC_NUMPADENTER		= VK_SEPARATOR,
		LSE_KC_F1				= VK_F1,
		LSE_KC_F2				= VK_F2,
		LSE_KC_F3				= VK_F3,
		LSE_KC_F4				= VK_F4,
		LSE_KC_F5				= VK_F5,
		LSE_KC_F6				= VK_F6,
		LSE_KC_F7				= VK_F7,
		LSE_KC_F8				= VK_F8,
		LSE_KC_F9				= VK_F9,
		LSE_KC_F10				= VK_F10,
		LSE_KC_F11				= VK_F11,
		LSE_KC_F12				= VK_F12,
		LSE_KC_F13				= VK_F13,
		LSE_KC_F14				= VK_F14,
		LSE_KC_F15				= VK_F15,
		LSE_KC_F16				= VK_F16,
		LSE_KC_F17				= VK_F17,
		LSE_KC_F18				= VK_F18,
		LSE_KC_F19				= VK_F19,
		LSE_KC_F20				= VK_F20,
		LSE_KC_F21				= VK_F21,
		LSE_KC_F22				= VK_F22,
		LSE_KC_F23				= VK_F23,
		LSE_KC_F24				= VK_F24,
		LSE_KC_NUMLOCK			= VK_NUMLOCK,
		LSE_KC_SCROLL			= VK_SCROLL,
	};
#elif defined( LSE_MAC )
	enum LSE_KEYCODES {
		LSE_KC_INVALID			= ~0,
		LSE_KC_BACK				= LSE_KC_INVALID,
		LSE_KC_TAB				= LSE_KC_INVALID,
		LSE_KC_CLEAR			= LSE_KC_INVALID,
		LSE_KC_ENTER			= LSE_KC_INVALID,
		LSE_KC_SHIFT			= LSE_KC_INVALID,
		LSE_KC_CONTROL			= LSE_KC_INVALID,
		LSE_KC_ALT				= LSE_KC_INVALID,
		LSE_KC_PAUSE			= LSE_KC_INVALID,
		LSE_KC_CAPSLOCK			= LSE_KC_INVALID,
		LSE_KC_KANA				= LSE_KC_INVALID,
		LSE_KC_JUNJA			= LSE_KC_INVALID,
		LSE_KC_FINAL			= LSE_KC_INVALID,
		LSE_KC_KANJI			= LSE_KC_INVALID,
		LSE_KC_ESCAPE			= LSE_KC_INVALID,
		LSE_KC_KANJICONVERT		= LSE_KC_INVALID,
		LSE_KC_KANJINONCONVERT	= LSE_KC_INVALID,
		LSE_KC_KANJIACCEPT		= LSE_KC_INVALID,
		LSE_KC_KANJIMODECHANGE	= LSE_KC_INVALID,
		LSE_KC_SPACE			= LSE_KC_INVALID,
		LSE_KC_PAGEUP			= LSE_KC_INVALID,
		LSE_KC_PAGEDOWN			= LSE_KC_INVALID,
		LSE_KC_END				= LSE_KC_INVALID,
		LSE_KC_HOME				= LSE_KC_INVALID,
		LSE_KC_LEFT				= LSE_KC_INVALID,
		LSE_KC_UP				= LSE_KC_INVALID,
		LSE_KC_RIGHT			= LSE_KC_INVALID,
		LSE_KC_DOWN				= LSE_KC_INVALID,
		LSE_KC_SELECT			= LSE_KC_INVALID,
		LSE_KC_EXECUTE			= LSE_KC_INVALID,
		LSE_KC_PRINTSCREEN		= LSE_KC_INVALID,
		LSE_KC_INSERT			= LSE_KC_INVALID,
		LSE_KC_DELETE			= LSE_KC_INVALID,
		LSE_KC_HELP				= LSE_KC_INVALID,
		LSE_KC_A				= 'A',
		LSE_KC_B				= 'B',
		LSE_KC_C				= 'C',
		LSE_KC_D				= 'D',
		LSE_KC_E				= 'E',
		LSE_KC_F				= 'F',
		LSE_KC_G				= 'G',
		LSE_KC_H				= 'H',
		LSE_KC_I				= 'I',
		LSE_KC_J				= 'J',
		LSE_KC_K				= 'K',
		LSE_KC_L				= 'L',
		LSE_KC_M				= 'M',
		LSE_KC_N				= 'N',
		LSE_KC_O				= 'O',
		LSE_KC_P				= 'P',
		LSE_KC_Q				= 'Q',
		LSE_KC_R				= 'R',
		LSE_KC_S				= 'S',
		LSE_KC_T				= 'T',
		LSE_KC_U				= 'U',
		LSE_KC_V				= 'V',
		LSE_KC_W				= 'W',
		LSE_KC_X				= 'X',
		LSE_KC_Y				= 'Y',
		LSE_KC_Z				= 'Z',
		LSE_KC_0				= '0',
		LSE_KC_1				= '1',
		LSE_KC_2				= '2',
		LSE_KC_3				= '3',
		LSE_KC_4				= '4',
		LSE_KC_5				= '5',
		LSE_KC_6				= '6',
		LSE_KC_7				= '7',
		LSE_KC_8				= '8',
		LSE_KC_9				= '9',
		LSE_KC_NUMPAD0			= LSE_KC_INVALID,
		LSE_KC_NUMPAD1			= LSE_KC_INVALID,
		LSE_KC_NUMPAD2			= LSE_KC_INVALID,
		LSE_KC_NUMPAD3			= LSE_KC_INVALID,
		LSE_KC_NUMPAD4			= LSE_KC_INVALID,
		LSE_KC_NUMPAD5			= LSE_KC_INVALID,
		LSE_KC_NUMPAD6			= LSE_KC_INVALID,
		LSE_KC_NUMPAD7			= LSE_KC_INVALID,
		LSE_KC_NUMPAD8			= LSE_KC_INVALID,
		LSE_KC_NUMPAD9			= LSE_KC_INVALID,
		LSE_KC_NUMPADMULTIPLY	= LSE_KC_INVALID,
		LSE_KC_NUMPADDIVIDE		= LSE_KC_INVALID,
		LSE_KC_NUMPADADD		= LSE_KC_INVALID,
		LSE_KC_NUMPADSUBTRACT	= LSE_KC_INVALID,
		LSE_KC_NUMPADDECIMAL	= LSE_KC_INVALID,
		LSE_KC_NUMPADENTER		= LSE_KC_INVALID,
		LSE_KC_F1				= LSE_KC_INVALID,
		LSE_KC_F2				= LSE_KC_INVALID,
		LSE_KC_F3				= LSE_KC_INVALID,
		LSE_KC_F4				= LSE_KC_INVALID,
		LSE_KC_F5				= LSE_KC_INVALID,
		LSE_KC_F6				= LSE_KC_INVALID,
		LSE_KC_F7				= LSE_KC_INVALID,
		LSE_KC_F8				= LSE_KC_INVALID,
		LSE_KC_F9				= LSE_KC_INVALID,
		LSE_KC_F10				= LSE_KC_INVALID,
		LSE_KC_F11				= LSE_KC_INVALID,
		LSE_KC_F12				= LSE_KC_INVALID,
		LSE_KC_F13				= LSE_KC_INVALID,
		LSE_KC_F14				= LSE_KC_INVALID,
		LSE_KC_F15				= LSE_KC_INVALID,
		LSE_KC_F16				= LSE_KC_INVALID,
		LSE_KC_F17				= LSE_KC_INVALID,
		LSE_KC_F18				= LSE_KC_INVALID,
		LSE_KC_F19				= LSE_KC_INVALID,
		LSE_KC_F20				= LSE_KC_INVALID,
		LSE_KC_F21				= LSE_KC_INVALID,
		LSE_KC_F22				= LSE_KC_INVALID,
		LSE_KC_F23				= LSE_KC_INVALID,
		LSE_KC_F24				= LSE_KC_INVALID,
		LSE_KC_NUMLOCK			= LSE_KC_INVALID,
		LSE_KC_SCROLL			= LSE_KC_INVALID,
	};	
#elif defined( LSE_LINUX )
#endif	// #ifdef LSE_WINDOWS

}	// namespace lse

#endif	// __LSE_KEYBOARDKEYS_H__
